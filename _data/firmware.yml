- titulo: Preparando la instalaci&oacute;n
  foto: img/cons-020-base-y-hombro.jpg
  texto: 
                    <p>
                    Antes de instalar el firmware en el arduino, para evitar forzar alg&uacute;n servo, vamos a desconectar la cuerdecita de la gr&uacute;a y los tornillos que unen las plaquitas del servo de las pinzas a las propias pinzas. Queremos que se muevan libremente (por ahora).
                    </p>
                    <p>
                    El servo de la mu&ntilde;eca y el motor paso a paso no necesitan calibrarse as&iacute; que no tenemos que preocuparnos de estos componentes.
                    </p>

- titulo: Instalando el firmware
  foto: img/cons-020-base-y-hombro.jpg
  texto: 
                    <ol>
                        <li>Descarga la carpeta <strong>firmware</strong> de nuestro github</li>
                        <li>Abre el archivo <strong>robik.ino</strong> desde el Arduino IDE</li>
                        <li>Selecciona en los men&uacute;s arduino->mi arduino y el puerto correspondiente</li>
                        <li>Pincha en verificar y tal</li>
                    </ol>

- titulo: Conect&aacute;ndose a <strong>Robik</strong>
  foto: img/cons-020-base-y-hombro.jpg
  texto: 
                    <p>
                        Una vez instalado el firmware, es el momento de conectarse a &eacute;l a trav&eacute;s del puerto USB. Puedes utilizar cualquier programa monitor serie. En este ejemplo usamos <i>picocom</i>, ejecut&aacute;ndolo desde una ventana de terminal poniendo como par&aacute;metro el puerto serie que nos proporciona Arduino (en linux, normalmente /dev/ttyUSB0)
                    </p>
                    <p>
                        <code>
    $ picocom /dev/ttyUSB0
    $ robik>
                        </code>
                    </p>
                    <p>
                        El firmware nos proporciona una serie de comandos que podemos teclear para ejecutar movimientos en el robot. El comando <strong>h</strong> (help) lista las instrucciones disponibles.
                    </p>
                    <p>
                        <code>
                            robik> h<br>
    tal
    cual
    porque
    porqueno
                        </code>
                    </p>


- titulo: Calibraci&oacute;n de la apertura de las pinzas
  foto: img/cons-030-servos.jpg
  texto: 
                    <p>
                    Los comandos <code>pa</code>, <code>pc</code> y <code>ps</code> dejan las pinzas en una posici&oacute;n <i>abierta</i>, <i>cerrada</i> y <i>semicerrada</i> respectivamente.
                    <ul>
                    <li><strong>Pinza abierta{:} </strong>esta posici&oacute;n permite al cubo girar libremente sobre su base. Interesa no abrirlas al m&aacute;ximo, sino lo justo para permitir que el cubo gire, y as&iacute; minimizar el tiempo que tarden en abrirse.</li>
                        <li><strong>Pinza cerrada{:} </strong>el cubo debe quedar lo suficientemente agarrado como para que la gr&uacute;a lo levante sin problemas.</li>
                        <li><strong>Pinza semicerrada{:} </strong>En esta posici&oacute;n el cubo debe estar suelto (pero con las pinzas muy cerca de &eacute;l). Esta posici&oacute;n se utiliza para preparar algunos movimientos, lo comprender&aacute;s enseguida cuando lo veas moverse.</li>
                    </ul>
                    </p>
                    <p>
                        Calibramos primeramente la longitud de las plaquitas que unen el servo de las pinzas con los brazos. Debemos tener estas piezas desatornilladas seg&uacute;n vimos en el primer paso, para que el servo que mueve las pinzas gire libremente, sin estar conectado a los brazos.
                    </p>
                    <p>
                        Cerramos la pinza con el comando <code>pc</code> (pinza cerrada). Oiremos el servo moverse a una posici&oacute;n concreta. En esta posici&oacute;n, el aspa del servo debe estar m&aacute;s o menos horizontal (si no es as&iacute;, separa el aspa del servo y vu&eacute;lvela a montar). Es el momento de colocar el cubo en la base de <strong>Robik</strong>, apretar las pinzas con nuestros dedos para que quede perfectamente agarrado, fijar los brazos a las plaquitas y terminar de apretar los tornillos de las mismas.
                    </p>
                    <p>
                    Una vez hecho esto, los comandos <code>pa</code>, <code>pc</code> y <code>ps</code> deber&aacute;n funcionar correctamente. Si las posiciones son <i>aproximadamente</i> correctas pero consideras que se puede afinar algo m&aacute;s, siempre puedes editar los par&aacute;metros del firmware, como se indica m&aacute;s adelante.

- titulo: Calibraci&oacute;n de la gr&uacute;a
  foto: img/cons-040-base.jpg
  texto: 
                    <p>
                        La gr&uacute;a se calibra de un modo similar. Con los comandos <code>ga</code>, <code>gb</code> y <code>gi</code> la gr&uacute;a se sit&uacute;a en una posici&oacute;n <i>arriba</i>, <i>abajo</i> y <i>semiarriba</i> (o semiabajo) respectivamente.
                    </p>
                    <ul>
                        <li><strong>Gr&uacute;a arriba{:} </strong>esta posici&oacute;n se usa para que, con el cubo agarrado, la mu&ntilde;eca lo gire sobre s&iacute; mismo.</li>
                        <li><strong>Gr&uacute;a abajo{:} </strong>en esta posici&oacute;n las pinzas deben quedar perfectamente alineadas con el centro del cubo, de manera que al cerrar las pinzas &eacute;ste quede perfectamente agarrado por el centro.</li>
                        <li><strong>Gr&uacute;a semiarriba{:} </strong>esta posici&oacute;n se usa cuando se gira la cara inferior del cubo, para que no estorben las piezas de la mu&ntilde;eca. Del mismo modo que antes, lo entender&aacute;s perfectamente cuando lo veas moverse.</li>
                    </ul>
                    <p>
                        Bajamos la gr&uacute;a con el comando <code>gb</code>. El servo debe quedar en una posici&oacute;n m&aacute;s o menos vertical hacia abajo (igual que en el caso anterior, si no es as&iacute;, separa el aspa y col&oacute;cala en posici&oacute;n vertical)
                    </p>
                    <p>
                        Ahora intenta ajustar la gr&uacute;a para que las mu&ntilde;ecas queden a la altura del centro del cubo (quiz&aacute; te sea m&aacute;s f&aacute;cil de alinear si previamente lanzas el comando <code>ps</code>. En esa posici&oacute;n termina de apretar la cuerdecita a la polea e los hombros.
                    </p>

- titulo: Primeros experimentos
  foto: img/cons-050-empezando-atornillar.jpg
  texto: 
                    <p>
                        Ya podemos empezar a experimentar moviendo el cubo con comandos, viendo c&oacute;mo se comporta y afinando los &uacute;ltimos ajustes. Los comandos son autoexplicativos, pero como gu&iacute;a, aqu&iacute; mostramos una prueba con la que empezar.
                    </p>
                    <ul>
                        <li>Pasos para girar la cara de arriba</li>
                        <ol>
                            <li><code>pa</code> abrir pinza, por si estaba cerrada</li>
                            <li><code>m0</code> para poner el servo de la mu&ntilde;eca en una posici&oacute;n que nos permita moverlo posteriormente 180º</li>
                            <li><code>gb</code> para bajar la gr&uacute;a</li>
                            <li><code>pc</code> para agarrar el cubo</li>
                            <li><code>ga</code> para levantar el cubo</li>
                            <li><code>m2</code> giramos la mu&ntilde;eca 180º</li>
                            <li><code>gb</code> volvemos a apoyar el cubo</li>
                            <li><code>ps</code> abrimos <i>un poquito</i> la pinza</li>
                            <li><code>gs</code> subimos <i>un poquito</i> la gr&uacute;a</li>
                            <li><code>pc</code> para agarrar el cubo (esta vez no por el centro, si no un poco m&aacute;s arriba)</li>
                            <li><code>gb 1</code> giramos la base (y como el cubo est&aacute; agarrado se mover&aacute; la cara)</li>
                        </ol>
                    </ul>
                    <p>
                    Si detectas alg&uacute;n movimiento que no es del todo exacto, repite los ajustes de la mec&aacute;nica hasta que consigas que funcione perfectamente

- titulo: Últimos ajustes
  foto: img/cons-060-brazos.jpg
  texto: 
                    <p>
                        Si no estas conforme con los ajustes mec&aacute;anicos, siempre puedes configurar los par&aacute;metros del firmware a tu gusto.
                    </p>
                    <p>
                    Todas las posiciones predefinidas para las pinzas, la gr&uacute;a, la mu&ntilde;eca, y el n&uacute;mero de pasos del motor est&aacute;n especificados en el fichero <strong>settings.h</strong>. Experimenta con los par&aacute;metros y busca la combinaci&oacute;n que m&aacute;s te convenza
                    </p>

- titulo: El comando <strong>sec</strong>
  foto: img/cons-070-servo-hombros.jpg
  texto: 
                    <p>
                    Un comando muy &uacute;til es <code>seq <i>secuencia</i></code>, que te permite ejecutar secuencias en el formato <a href="https://es.wikipedia.org/wiki/Cubo_de_Rubik#Notaci.C3.B3n">singmaster</a>. Por ejemplo, este comando hace el movimiento conocido como <i>sexy move</i>.
                    </p>
                    <p>
                    <code>seq URU'R'</code>
                    </p>
                    <p>
                    Este comando tambi&eacute;n te permite depurar de forma m&aacute;s sencilla los movimientos del cubo para optimizar los movimientos, ya sea modificando los par&aacute;metros en <strong>settings.h</strong>, afinando los tiempos de espera en <strong>robot.c</strong> o modificando cualquier parte del firmware que se te ocurra.
                    </p>

- titulo: Experimenta, experimenta, experimenta!
  foto: img/cons-080-atornillando-soportes.jpg
  texto: 
                    <p>
                        ...y hasta aqu&iacute; hemos llegado! No dudes en experimentar con todas las partes de tu robot y comentarnos cualquier problema o mejora que se te ocurra.
                    </p>


